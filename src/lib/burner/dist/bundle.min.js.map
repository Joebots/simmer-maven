{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/lib/burner/graphic-element.js","webpack:///./src/main/webapp/lib/burner/index.js","webpack:///./src/main/webapp/lib/burner/burner.js","webpack:///./src/main/webapp/lib/burner/breadboard.js","webpack:///./src/main/webapp/lib/burner/bank.js","webpack:///./src/main/webapp/lib/burner/connections.js","webpack:///./src/main/webapp/lib/burner/canvas-drawer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","children","state","isDirty","burner","require","breadboard","banks","offsetX","offsetY","width","height","topMargin","leftMargin","rows","vertical","type","connections","marginLeft","pitch","window","BurnerNew","Breadboard","Connections","CanvasDrawer","Burner","config","init","activeStepIndex","steps","layers","initBreadboard","initConnections","initDrawer","push","color","drawer","target","canvas","document","querySelector","load","restore","start","show","updateCanvas","data","reset","map","item","pins","reduce","accumulator","current","bank","row","title","text","x","isRail","railPosition","y","keys","index","bankIndex","highlight","nextStepIndex","length","prevStepIndex","stepIndex","Array","apply","then","circuit","highlightAll","GraphicElement","Bank","initBanks","context","hideBanks","forEach","activeRows","rowColor","rect","background","active","number","font","align","thickness","rowCount","rowOffset","offset","x1","y1","w","h","Math","floor","setDirty","indexes","filter","contains","Promise","resolve","setTimeout","connection","indices","highlighted","Number","sort","left","right","previousConnection","distance","indexOf","arc","running","tree","stop","origami","drawBackground","run","render","requestAnimationFrame","node","update","draw","border","clear","restoreTree"],"mappings":"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","file":"dist/bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = class GraphicElement {\n  constructor() {\n    this.children = [];\n  }\n\n  draw() {\n\n  }\n\n  update() {\n\n  }\n\n  setDirty(state) {\n    this.isDirty = state;\n  }\n};","const Burner = require('./burner');\nconst burner = new Burner({\n  breadboard: {\n    banks: [\n          {\n            offsetX: 0,\n            offsetY: 0,\n            width: 4,\n            height: 480,\n            topMargin: 30,\n            leftMargin: 30,\n            rows: 3,\n            vertical: true,\n            type: 'BUS'\n          },\n          {\n            offsetX: 80,\n            offsetY: 0,\n            width: 75,\n            height: 4,\n            topMargin: 30,\n            leftMargin: 30,\n            rows: 32,\n            type: 'TERMINAL'\n          },\n          {\n            offsetX: 170,\n            offsetY: 0,\n            width: 75,\n            height: 4,\n            topMargin: 30,\n            leftMargin: 30,\n            rows: 32,\n            type: 'TERMINAL'\n          },\n          {\n            offsetX: 275,\n            offsetY: 0,\n            width: 75,\n            height: 4,\n            topMargin: 30,\n            leftMargin: 30,\n            rows: 32,\n            type: 'GPIO'\n          }\n        ]\n  },\n  connections: {\n    marginLeft: 12,\n    topMargin: 25,\n    pitch: 15\n  }\n});\n\nwindow.BurnerNew = burner;\n\n","const Breadboard = require('./breadboard');\nconst Connections = require('./connections');\nconst CanvasDrawer = require('./canvas-drawer');\n\nclass Burner {\n  constructor(config) {\n    this.config = config;\n\n    this.init();\n  }\n\n  init() {\n    this.activeStepIndex = -1;\n    this.steps = [];\n    this.layers = [];\n    this.connections = {};\n\n    this.initBreadboard();\n    this.initConnections();\n    this.initDrawer();\n  }\n\n  initBreadboard() {\n    this.breadboard = new Breadboard(this.config.breadboard);\n\n    this.layers.push(this.breadboard);\n  }\n\n  initConnections() {\n    this.connections = new Connections({\n      color: '#b2a474',\n      width: 10\n    });\n\n    this.layers.push(this.connections);\n  }\n\n  initDrawer() {\n    this.drawer = new CanvasDrawer();\n  }\n\n  updateCanvas(target, config) {\n    const canvas = window.document.querySelector(target);\n\n    if(canvas) {\n      canvas.width = config.width;\n      canvas.height = config.height;\n      this.load(target);\n      this.drawer.restore();\n    }\n  }\n\n  load(target) {\n    this.drawer.load(target, this.layers);\n    this.drawer.start();\n  }\n\n  loadConfig(config) {\n    this.config = config;\n    this.breadboard.load(this.config.breadboard);\n\n    if(this.activeStepIndex > -1) {\n      this.show(this.activeStepIndex);\n    }\n\n    this.updateCanvas('#burner', {\n      width: this.config.breadboard.width,\n      height: this.config.breadboard.height\n    });\n  }\n\n  layout(data) {\n    this.reset();\n    this.steps = data.map(item => {\n      const banks = item.pins.reduce((accumulator, current) => {\n        accumulator[current.bank] = accumulator[current.bank] || {rows: [], connections: []};\n        accumulator[current.bank].rows.push(current.row);\n        accumulator[current.bank].connections.push({\n          title: current.text,\n          x: current.isRail ? this.railPosition(current.bank, current.row) : this.config.connections.leftMargin,\n          y: current.isRail ? this.config.breadboard.height - this.config.connections.pitch : this.config.connections.topMargin + current.row * this.config.connections.pitch\n        });\n\n        return accumulator;\n      }, {});\n\n      return {\n        banks: Object.keys(banks)\n          .map(bank => ({\n            index: bank,\n            rows: banks[bank].rows,\n            connections: banks[bank].connections\n          }))\n      };\n    });\n  }\n\n  railPosition(bankIndex, row) {\n    const bank = this.config.breadboard.banks[bankIndex];\n    return bank.offsetX + bank.leftMargin + (row * bank.pitch);\n  }\n\n  reset() {\n    this.activeStepIndex = -1;\n    this.breadboard.highlight([]);\n    this.connections.highlight([]);\n  }\n\n  next() {\n    this.drawer.reset();\n    const nextStepIndex = ++this.activeStepIndex >= this.steps.length ? this.activeStepIndex = 0 : this.activeStepIndex;\n    this.show(nextStepIndex);\n  }\n\n  prev() {\n    this.drawer.reset();\n    const prevStepIndex = --this.activeStepIndex < 0 ? this.activeStepIndex = this.steps.length - 1 : this.activeStepIndex;\n    this.show(prevStepIndex);\n  }\n\n  show(stepIndex) {\n    this.breadboard.highlight(this.steps[stepIndex].banks);\n    this.connections.load(this.steps[stepIndex].banks.reduce((accumulator, current) => {\n      Array.prototype.push.apply(accumulator, current.connections);\n\n      return accumulator;\n    }, []))\n      .then(() => this.connections.highlight());\n  }\n\n  parseCircuit(circuit) {\n\n  }\n\n  highlightAll(value) {\n    this.breadboard.highlightAll(value);\n  }\n}\n\nmodule.exports = Burner;","const GraphicElement = require('./graphic-element');\nconst Bank = require('./bank');\n\nmodule.exports = class Breadboard extends GraphicElement {\n  constructor(config) {\n    super();\n    this.load(config);\n  }\n\n  load(config) {\n    this.initBanks(config.banks);\n  }\n\n  initBanks(banks = []) {\n    this.banks = banks;\n    this.children = this.banks\n      .map(bank => new Bank(bank));\n  }\n\n  draw(context) {\n    super.draw(context);\n  }\n\n  update() {\n    super.update();\n  }\n\n  highlight(banks) {\n    this.hideBanks();\n    banks.forEach(bank => this.children[bank.index].highlight(bank.rows));\n  }\n\n  hideBanks() {\n    this.children.forEach(bank => bank.highlight());\n  }\n\n  highlightAll(value) {\n    this.children.forEach(bank => bank.highlightAll(value));\n  }\n};","const GraphicElement = require('./graphic-element');\n\nmodule.exports = class Bank extends GraphicElement {\n    constructor(config) {\n        super();\n        this.config = config;\n        this.activeRows = {};\n        this.rows = [];\n    }\n\n    draw(context) {\n        this.rows.forEach((row, i) => {\n            let rowColor = 'white';\n\n            switch (row.type) {\n                case 'GPIO':\n                    rowColor = 'yellow';\n                    break;\n                case 'BUS':\n                    // Hardcode power rail\n                    if (i === 2) {\n                        rowColor = 'red';\n                    }\n                    break;\n            }\n\n            context.rect(row.x, row.y, row.width, row.height, {\n                background: row.active ? rowColor : 'black'\n            });\n\n            context.text(row.number, row.x - 5, row.y, {\n                color: row.active ? rowColor : 'black',\n                font: '10px Serif',\n                align: 'center',\n            });\n        });\n    }\n\n    update() {\n        const thickness = this.config.thickness || 3;\n        const pitch = this.config.pitch || 15;\n        let width = 0;\n        let height = 0;\n        let rowCount = 0;\n        let rowOffset = 0;\n\n        if (this.config.vertical) {\n            width = thickness;\n            height = pitch * (this.config.rowCount - this.config.rowOffset);\n            rowCount = this.config.rows;\n            rowOffset = 0;\n        } else {\n            width = pitch * 5;\n            height = thickness;\n            rowCount = this.config.rowCount;\n            rowOffset = this.config.rowOffset;\n        }\n\n        const x = this.config.leftMargin + this.config.offsetX;\n        const y = this.config.topMargin + this.config.offsetY;\n        this.rows = [];\n\n        for (let i = rowOffset; i < rowCount; i++) {\n            let offset = (i - rowOffset) * pitch;\n            let x1 = this.config.vertical ? x + offset : x;\n            let y1 = this.config.vertical ? y : y + offset;\n            let w = width;\n            let h = height;\n\n            x1 -= thickness / 2;\n            y1 -= thickness / 2;\n\n            this.rows.push({\n                number: i + 1,\n                x: Math.floor(x1),\n                y: Math.floor(y1),\n                width: w,\n                height: h,\n                type: this.config.type,\n                active: this.activeRows[i]\n            });\n        }\n    }\n\n    highlight(rows = []) {\n        this.activeRows = rows.reduce((accumulator, current) => {\n            accumulator[current] = true;\n            return accumulator;\n        }, {});\n\n        this.setDirty(true);\n    }\n\n    highlightAll(value) {\n        for (let i = 0; i < this.config.rowCount; i++) {\n            this.activeRows[i] = value;\n        }\n\n        this.setDirty(true);\n    }\n\n    getRows(indexes = []) {\n        return this.rows.filter((row, i) => indexes.contains(i));\n    }\n};","const GraphicElement = require('./graphic-element');\n\nmodule.exports = class Connections extends GraphicElement {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.connections = [];\n  }\n\n  load(connections) {\n    this.reset();\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.connections = connections\n          .map(connection => ({\n            background: {\n              type: 'circle',\n              x: connection.x,\n              y: connection.y,\n              width: this.config.width,\n              color: this.config.color\n            },\n            title: connection.title\n          }));\n        resolve();\n      });\n    });\n  }\n\n  reset() {\n    // Hide previously highlighted connections\n    this.highlight([]);\n  }\n\n  highlight(indices) {\n    if (indices) {\n      this.highlighted = indices;\n    }\n    else {\n      this.highlighted = Array.apply(null, {length: this.connections.length}).map(Number.call, Number);\n    }\n\n    this.setDirty(true);\n  }\n\n  update() {\n    const connections = this.connections.sort((left, right) => right.background.y - left.background.y);\n\n    for (let i = 1; i < connections.length; i++) {\n      const previousConnection = connections[i - 1];\n      const connection = connections[i];\n\n      const distance = connection.background.y + (connection.background.width * 2) - previousConnection.background.y;\n\n      if(distance >= 0) {\n        if(connection.background.y === previousConnection.background.y) {\n            connection.background.x += connection.background.width * 2;\n        }\n        else {\n            connection.background.y -= distance + 1;\n        }\n      }\n    }\n\n    this.connections.forEach((connection, i) => connection.active = this.highlighted.indexOf(i) !== -1);\n  }\n\n  draw(context) {\n    this.connections\n      .forEach(connection => {\n        switch (connection.background.type) {\n          case 'circle':\n            if (connection.active) {\n              context\n                .arc(connection.background.x, connection.background.y, connection.background.width, {\n                  background: connection.background.color\n                })\n                .text(connection.title, connection.background.x, connection.background.y, {\n                  color: 'black',\n                  font: '12px Arial',\n                  align: 'center'\n                });\n            }\n            else {\n              context\n                .arc(connection.background.x, connection.background.y, connection.background.width, {\n                  background: 'black'\n                })\n            }\n            break;\n        }\n      });\n  }\n};","class CanvasDrawer {\n  constructor() {\n    this.running = false;\n  }\n\n  load(canvas, tree = []) {\n    this.tree = tree;\n    this.stop();\n    this.context = origami(canvas);\n\n    this.drawBackground();\n  }\n\n  start() {\n    this.running = true;\n    this.run();\n  }\n\n  stop() {\n    this.running = false;\n  }\n\n  run() {\n    if (this.running) {\n      this.render(this.tree);\n      window.requestAnimationFrame(() => this.run());\n    }\n  }\n\n  render(tree = []) {\n    tree\n      .forEach(node => {\n        if (node.isDirty) {\n          node.update();\n          node.draw(this.context);\n          node.setDirty(false);\n          this.context.draw();\n        }\n\n        this.render(node.children);\n      });\n  }\n\n  drawBackground() {\n    this.context\n      .background('black')\n      .draw();\n  }\n\n  drawBorder() {\n    this.context\n      .border({\n        border: '1px solid #F00'\n      })\n      .draw();\n  }\n\n  reset() {\n    this.context.clear();\n  }\n\n  restore() {\n    this.restoreTree(this.tree);\n  }\n\n  restoreTree(tree = []) {\n    tree.forEach(node => {\n      node.setDirty(true);\n      this.restoreTree(node.children);\n    });\n  }\n}\n\nmodule.exports = CanvasDrawer;"],"sourceRoot":""}